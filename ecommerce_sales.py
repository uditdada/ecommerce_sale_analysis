# -*- coding: utf-8 -*-
"""ecommerce_sales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PFaEU88EWiHEgLzx1B4JMXAq7laEEcat
"""

import pandas as pd;

import plotly.express as px;
import plotly.graph_objects as go;
import plotly.io as pio;
import plotly.colors as colors;
pio.templates.default = "plotly_white";
pio.renderers.default = "browser";

from google.colab import drive
drive.mount('/content/drive')

data=pd.read_csv("/content/data (1).csv",encoding="latin1");

data.describe()

data.info()

"""# **converting data time**"""

data["Order Date"]=pd.to_datetime(data["Order Date"]);
data["Ship Date"]=pd.to_datetime(data["Ship Date"]);

data["order_year"]=data["Order Date"].dt.year;
data["order_month"]=data["Order Date"].dt.month;
data["day of week"]=data["Order Date"].dt.dayofweek;

data.to_csv("data.csv",index=False);

"""# **Monthwise** **Analysis**"""

import plotly.express as px

monthly_sales = data.groupby('order_month')['Sales'].sum().reset_index()
fig = px.line(monthly_sales, x='order_month', y='Sales', title='Monthly Sales')
fig.show(renderer="colab")  # Use the "colab" renderer for Google Colab

"""# **Catogry Analysis**"""

sales_by_category=data.groupby('Category')['Sales'].sum().reset_index()
fig=px.bar(sales_by_category,x='Category',y='Sales',title='Sales by category',color='Category')
fig.show(renderer="colab")

"""# **SubCategory Analysis**"""

sales_by_subcategory=data.groupby('Sub-Category')['Sales'].sum().reset_index();
fig=px.bar(sales_by_subcategory,x='Sub-Category',y='Sales',title='Sales_by_subcategory',color='Sub-Category')
fig.show(renderer="colab")

"""# **Monthly Profit**"""

monthly_profit=data.groupby('order_month')['Profit'].sum().reset_index()
fig=px.line(monthly_profit,x='order_month',y='Profit',title='Monthly profit')
fig.show(renderer="colab")

"""# **Category Profit**"""

profit_by_category=data.groupby('Category')['Profit'].sum().reset_index()
fig=px.pie(profit_by_category,values='Profit',names='Category',hole=0.5,title='Profit_by_category')
fig.show(renderer="colab")

"""# **Sales and Profit by Segment**"""

sales_profit_by_segment=data.groupby('Segment')[['Profit','Sales']].sum().reset_index()
color_palette = colors.qualitative.Pastel

fig = go.Figure()
fig.add_trace(go.Bar(x=sales_profit_by_segment['Segment'],
                     y=sales_profit_by_segment['Sales'],
                     name='Sales',
                     marker_color=color_palette[0]))

fig.add_trace(go.Bar(x=sales_profit_by_segment['Segment'],
                     y=sales_profit_by_segment['Profit'],
                     name='Profit',
                     marker_color=color_palette[1]))

fig.update_layout(title='Sales and Profit Analysis by Customer Segment',
                  xaxis_title='Customer Segment', yaxis_title='Amount')

fig.show(renderer="colab")

"""# **Sales Profit Ratio by Segment**"""

segment_ratio_profit_sales=data.groupby('Segment').agg({'Sales':'sum','Profit':'sum'}).reset_index()
segment_ratio_profit_sales['profit_sales_ratio']=segment_ratio_profit_sales['Profit']/segment_ratio_profit_sales['Sales']
print(segment_ratio_profit_sales[['Segment','profit_sales_ratio']])